package config_test

import (
	"github.com/Varshi292/RoastWear/internal/config"
	"github.com/Varshi292/RoastWear/internal/utils"
	"testing"
)

func TestAppConfigValidation(t *testing.T) {
	if err := utils.InitializeValidator(); err != nil {
		t.Fatal(err)
	}

	type testCase struct {
		name       string
		cfg        config.AppConfig
		shouldFail bool
	}

	tests := []testCase{
		{
			name: "Valid Configuration",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: false,
		},
		{
			name: "Missing BackendPort",
			cfg: config.AppConfig{
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Missing FrontendPort",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Missing Mode",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Missing Parameter: Domain",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Missing Parameter: StaticFilePath",
			cfg: config.AppConfig{
				BackendPort:   "7777",
				FrontendPort:  "3000",
				Mode:          "development",
				Domain:        "http://localhost",
				UserDBPath:    "./db/users.db",
				SessionDBPath: "./db/sessions.db",
				UploadDBPath:  "./db/uploads.db",
				CartDBPath:    "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Missing UserDBPath",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Missing Parameter: SessionDBPath",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Missing UploadDBPath",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Missing CartDBPath",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
			},
			shouldFail: true,
		},
		{
			name: "Empty BackendPort",
			cfg: config.AppConfig{
				BackendPort:     "",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Empty FrontendPort",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Empty Mode",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Empty Parameter: Domain",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Empty Parameter: StaticFilePath",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Empty UserDBPath",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Empty Parameter: SessionDBPath",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Empty UploadDBPath",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Empty CartDBPath",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "",
			},
			shouldFail: true,
		},
		{
			name: "Nonnumeric BackendPort",
			cfg: config.AppConfig{
				BackendPort:     "SevenSevenSevenSeven",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Nonnumeric FrontendPort",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "ThreeZeroZeroZero",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Minimum BackendPort Value",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: false,
		},
		{
			name: "Maximum BackendPort Value",
			cfg: config.AppConfig{
				BackendPort:     "65535",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: false,
		},
		{
			name: "Out-of-Lower-Bound BackendPort Value",
			cfg: config.AppConfig{
				BackendPort:     "0",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Out-of-Upper-Bound BackendPort Value",
			cfg: config.AppConfig{
				BackendPort:     "65536",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Minimum FrontendPort Value",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "1",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: false,
		},
		{
			name: "Maximum FrontendPort Value",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "65535",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: false,
		},
		{
			name: "Out-of-Lower-Bound FrontendPort Value",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "0",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Out-of-Upper-Bound Frontend Value",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "65536",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Invalid StaticFilesPath Path",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "                ",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Invalid UserDBPath Path",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend/build",
				UserDBPath:      "                ",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Invalid SessionDBPath Path",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend|build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "                ",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Invalid UploadDBPath Path",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend|build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "                ",
				CartDBPath:      "./db/carts.db",
			},
			shouldFail: true,
		},
		{
			name: "Invalid CartDBPath Path",
			cfg: config.AppConfig{
				BackendPort:     "7777",
				FrontendPort:    "3000",
				Mode:            "development",
				Domain:          "http://localhost",
				StaticFilesPath: "./frontend|build",
				UserDBPath:      "./db/users.db",
				SessionDBPath:   "./db/sessions.db",
				UploadDBPath:    "./db/uploads.db",
				CartDBPath:      "                ",
			},
			shouldFail: true,
		},
	}
	for _, tc := range tests {
		t.Run(tc.name, func(t *testing.T) {
			err := utils.Validate.Struct(tc.cfg)
			if tc.shouldFail && err == nil {
				t.Errorf("Expected validation to fail but it passed.")
			}
			if !tc.shouldFail && err != nil {
				t.Errorf("Expected validation to pass but it failed: %v", err)
			}
		})
	}
}
